@inherits Base

@if (Reservation != null && PriceCalculator != null)
{
    <table class="table table-sm" style="width: 1100px;">
        <thead class="thead-dark">
            <tr style="text-align: center;">
                <th scope="col"></th>
                <th scope="col">Gość</th>
                <th scope="col">Dziecko</th>
                <th scope="col">Nowożeniec</th>
                <th scope="col">Śniadanie</th>
                <th scope="col">Cena</th>
                <th scope="col"></th>
            </tr>
        </thead>

        <tbody>
            @foreach (var reservationRoom in Reservation.ReservationRooms)
            {
                var style = "text-align: center;";

                var index = Reservation.ReservationRooms.IndexOf(reservationRoom);
                if (index % 2 == 0 || index == 0)
                {
                    style += "background-color: lemonchiffon;";
                }

                var guests = reservationRoom.Guests;
                if (!guests.Any())
                {
                    <tr style=@style>
                        <td style="width: 160px;">
                            <div>
                                <p>@reservationRoom.Room.Area.Name</p>
                                <p>@reservationRoom.Room.Name</p>
                                <p>@($"{guests.Count}/{reservationRoom.Room.PeopleCapacity}")</p>
                                <p>Cena: @PriceCalculator.CalculateRoomPrice(reservationRoom) zł</p>
                                <br />
                                <RadzenButton ButtonStyle="ButtonStyle.Success" Size="ButtonSize.Small" Text="Dodaj osobę"
                                              Click="(async () => await AddGuest(reservationRoom))" />
                            </div>
                        </td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
                }
                else
                {
                    @foreach (var guest in guests)
                    {
                        var guestDto = Mapper.Map<GuestDto>(guest);

                        <tr style=@style>
                            @if (guests.IndexOf(guest) == 0)
                            {
                                <td rowspan="@guests.Count()" style="width: 160px;">
                                    <div>
                                        <p>@reservationRoom.Room.Area.Name</p>
                                        <p>@reservationRoom.Room.Name</p>
                                        <p>@($"{guests.Count}/{reservationRoom.Room.PeopleCapacity}")</p>
                                        <p>Cena: @PriceCalculator.CalculateRoomPrice(reservationRoom) zł</p>
                                        <br />
                                        <RadzenButton ButtonStyle="ButtonStyle.Success" Size="ButtonSize.Small" Text="Dodaj osobę"
                                                      Click="(async () => await AddGuest(reservationRoom))"
                                                      Disabled="(guests.Count == reservationRoom.Room.PeopleCapacity ||
                                                                 Reservation.GetGuestsAmount() == ReservationFactors.BookingAmount)" />
                                    </div>
                                </td>
                            }

                            <td>
                                <RadzenTextBox @bind-Value="guestDto.Name" Change="(async (args) => await UpdateGuest(guest, guestDto))" />
                                <p>Cena za noc: @PriceCalculator.CalculateGuestPrice(guest) zł</p>
                            </td>
                            <td><RadzenCheckBox @bind-Value="guestDto.IsChild" Change="(async (bool args) => await UpdateGuest(guest, guestDto))" /></td>
                            <td><RadzenCheckBox @bind-Value="guestDto.IsNewlyweds" Change="(async (bool args) => await UpdateGuest(guest, guestDto))" /></td>
                            <td><RadzenCheckBox @bind-Value="guestDto.OrderedBreakfest" Change="(async (bool args) => await UpdateGuest(guest, guestDto))" /></td>
                            <td>
                                Standardowa cena: <RadzenCheckBox TValue="bool"
                                                                  Change="(async (bool args) => await BasePriceStateChanged(args, guest, guestDto))"
                                                                  @bind-Value="_guestStandardPrice[guest]" />

                                @if (_guestStandardPrice[guest] == false)
                                {
                                    <hr />
                                    <span>Cena: </span>
                                    <RadzenNumeric TValue="decimal" @bind-Value="guestDto.BasePrice"
                                                   Change="(async (decimal price) => await PriceChanged(price, guest, guestDto))"
                                                   Style="width: 85px;" Min="0" Max="999" /><span> zł</span>
                                }
                            </td>
                            <td>
                                <RadzenButton ButtonStyle="ButtonStyle.Danger" Size="ButtonSize.Small" Text="Usuń"
                                              Click="(async () => await RemoveGuest(reservationRoom, guest))" />
                            </td>
                        </tr>
                    }
                }
            }
        </tbody>
    </table>
}