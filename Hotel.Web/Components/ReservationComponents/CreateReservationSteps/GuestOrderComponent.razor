
@if (Reservation != null)
{
    <table class="table table-responsive-sm" style="width: 1500px;">
        <thead class="thead-dark">
            <tr>
                <th scope="col"></th>
                <th scope="col">Gość</th>
                <th scope="col">Dziecko</th>
                <th scope="col">Nowożeniec</th>
                <th scope="col">Śniadanie</th>
                <th scope="col">Cena</th>
                <th scope="col"></th>
            </tr>
        </thead>

        <tbody>
            @foreach (var reservationRoom in Reservation.ReservationRooms)
            {
                var roomGuests = reservationRoom.RoomGuests;
                if (!roomGuests.Any())
                {
                    <tr>
                        <td style="width: 160px;">
                            <p>@reservationRoom.Room.Name</p>
                            <p>(@reservationRoom.Room.Area.Name)</p>
                            <p>@($"{roomGuests.Count}/{reservationRoom.Room.PeopleCapacity}")</p>
                            <br />
                            <RadzenButton ButtonStyle="ButtonStyle.Success" Size="ButtonSize.Small" Text="Dodaj osobę"
                                          Click="(async () => await AddGuest(reservationRoom))" />
                        </td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
                }
                else
                {
                    @foreach (var guest in roomGuests)
                    {
                        var guestDto = Mapper.Map<GuestDto>(guest);

                        <tr>
                            @if (roomGuests.IndexOf(guest) == 0)
                            {
                                <td rowspan="@roomGuests.Count()" style="width: 160px;">
                                    <p>@reservationRoom.Room.Name</p>
                                    <p>(@reservationRoom.Room.Area.Name)</p>
                                    <p>@($"{roomGuests.Count}/{reservationRoom.Room.PeopleCapacity}")</p>
                                    <br />
                                    <RadzenButton ButtonStyle="ButtonStyle.Success" Size="ButtonSize.Small" Text="Dodaj osobę"
                                                  Click="(async () => await AddGuest(reservationRoom))"
                                                  Disabled="(roomGuests.Count == reservationRoom.Room.PeopleCapacity)" />
                                </td>
                            }

                            <td>
                                <RadzenTextBox @bind-Value="guestDto.Name" Change="(async (args) => await UpdateGuest(guest, guestDto))" />
                                <p>Cena za noc: @PriceCalculator.CalculateGuestPrice(guest) zł</p>
                            </td>
                            <td><RadzenCheckBox @bind-Value="guestDto.IsChild" Change="(async (bool args) => await UpdateGuest(guest, guestDto))" /></td>
                            <td><RadzenCheckBox @bind-Value="guestDto.IsNewlyweds" Change="(async (bool args) => await UpdateGuest(guest, guestDto))" /></td>
                            <td><RadzenCheckBox @bind-Value="guestDto.OrderedBreakfest" Change="(async (bool args) => await UpdateGuest(guest, guestDto))" /></td>
                            <td>
                                Standardowa cena: <RadzenCheckBox TValue="bool"
                                                       Change="(async (bool args) => await DefaultPriceStateChanged(args, guest, guestDto))"
                                                       @bind-Value="_guestStandardPrice[guest]"  />

                                @if (_guestStandardPrice[guest] == false)
                                {
                                    <hr />
                                    <span>Cena: </span>
                                    <RadzenNumeric TValue="decimal" @bind-Value="guestDto.PriceForStay"
                                                   Change="(async (decimal price) => await PriceChanged(price, guest, guestDto))"
                                                   Style="width: 60px;" Min="0" Max="999" /><span> zł</span>
                                }
                            </td>
                            <td>
                                <RadzenButton ButtonStyle="ButtonStyle.Danger" Size="ButtonSize.Small" Text="Usuń"
                                              Click="(async () => await RemoveGuest(reservationRoom, guest))" />
                            </td>
                        </tr>
                    }
                }
            }
        </tbody>
    </table>
}

<Base @ref="_base" />
@code{
    private Base _base;
}